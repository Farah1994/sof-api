{
  "openapi" : "3.0.0",
  "servers" : [ {
    "description" : "SwaggerHub API Auto Mocking",
    "url" : "https://virtserver.swaggerhub.com/Farah1994/API_Documentation/1.0.0"
  } ],
  "info" : {
    "description" : "This is a simple API",
    "version" : "1.0.0",
    "title" : "SFMS API Documentation",
    "contact" : {
      "email" : "info@classtune.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags" : [ {
    "name" : "Assignment-Teacher"
  }, {
    "name" : "Assignment-Student"
  } ],
  "x-tagGroups" : [ {
    "name" : "Features",
    "tags" : [ "Assignment-Teacher", "Assignment-Student" ]
  } ],
  "paths" : {
    "/assignment" : {
      "post" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "Create a new assignment",
        "operationId" : "assignment",
        "parameters" : [ {
          "name" : "cookieParam",
          "in" : "cookie",
          "required" : true,
          "description" : "Some cookie",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "Accept-Language",
          "in" : "header",
          "required" : false,
          "description" : "List of acceptable human languages for response. Supported values are en-US, bn",
          "schema" : {
            "type" : "string",
            "default" : "en-US"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/create-assignment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/create-assignment"
              }
            }
          },
          "description" : "Assignment object that needs to be added to the system",
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created a new assignment."
          },
          "405" : {
            "description" : "Invalid Input"
          }
        }
      },
      "get" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "List of assignment with summary",
        "operationId" : "getAssignments",
        "parameters" : [ {
          "in" : "header",
          "name" : "start_date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "in" : "header",
          "name" : "end_date",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "in" : "header",
          "name" : "student_id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "header",
          "name" : "class_id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "in" : "header",
          "name" : "section_id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation."
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Assignment not found"
          }
        }
      }
    },
    "/assignment/{id}" : {
      "get" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "Get a assignment by ID",
        "description" : "Show assignment detail with students' submission.",
        "operationId" : "getAssignmentById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation."
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Assignment not found"
          }
        }
      },
      "put" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "Update of an assignment",
        "operationId" : "updateAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/create-assignment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/create-assignment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation."
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Assignment not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "Deletes a assignment",
        "description" : "For valide response, Delete if no student submitted an assignment. Check Assignment->count_submitted_by_student == 0",
        "operationId" : "deleteAssignment",
        "parameters" : [ {
          "name" : "api_key",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Assignment id to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Assignment not found"
          }
        }
      }
    },
    "/assignment/{id}/publish" : {
      "put" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "Publish an assignment from assignment list",
        "operationId" : "publishAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/create-assignment"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/create-assignment"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation."
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Assignment not found"
          }
        }
      }
    },
    "/assignment/{assignmentId}/{studentId}" : {
      "get" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "Detail of assignment for a single student submission detail with feedback",
        "operationId" : "submissionDetail",
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "studentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation."
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Assignment not found"
          }
        }
      }
    },
    "/assignment/{assignmentId}/{studentId}/{submittedAssigmentId}" : {
      "put" : {
        "tags" : [ "Assignment-Teacher" ],
        "summary" : "Accept / deny / resubmit students submission",
        "operationId" : "submissionStatus",
        "parameters" : [ {
          "name" : "assignmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "studentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "submittedAssigmentId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/submission_status"
              }
            },
            "application/xml" : {
              "schema" : {
                "$ref" : "#/components/schemas/submission_status"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Successful operation."
          },
          "400" : {
            "description" : "Invalid ID supplied"
          },
          "404" : {
            "description" : "Assignment not found"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "create-assignment" : {
        "type" : "object",
        "required" : [ "title", "published_at", "due_at", "status", "is_markable", "marks", "assign_to_batch", "assign_to_student", "subject_id", "submission_required" ],
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "The title given to a assignment.",
            "maxLength" : 255
          },
          "description" : {
            "type" : "string",
            "description" : "The instructions are given in the description section.",
            "maxLength" : 450
          },
          "assignment_attachment__url" : {
            "type" : "array",
            "description" : "Attach Specific Files (PDF, Ms word, Text File, JPEG, Ms Power point, Ms Excel) as assignment attachment.",
            "nullable" : true,
            "xml" : {
              "name" : "assignment_attachment",
              "wrapped" : true
            },
            "items" : {
              "type" : "string"
            }
          },
          "published_at" : {
            "type" : "string",
            "format" : "date",
            "default" : "date.now",
            "example" : "2021-10-06"
          },
          "due_at" : {
            "type" : "string",
            "format" : "date",
            "default" : "date.now",
            "example" : "2021-10-06"
          },
          "status" : {
            "type" : "string"
          },
          "is_markable" : {
            "$ref" : "#/components/schemas/Marks"
          },
          "assign_to_batch" : {
            "type" : "string"
          },
          "assign_to_student" : {
            "type" : "string"
          },
          "subject_id" : {
            "type" : "integer"
          },
          "submission_required" : {
            "type" : "integer",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "Marks" : {
        "type" : "object",
        "properties" : {
          "is_markable" : {
            "type" : "integer",
            "enum" : [ 0, 1 ]
          },
          "marks" : {
            "type" : "number"
          }
        },
        "xml" : {
          "name" : "Marks"
        }
      },
      "submission_status" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 10
          },
          "name" : {
            "type" : "string",
            "example" : "Tasnia Tabassum Taha"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "approved", "rejected", "resubmitted" ],
            "example" : "pending"
          },
          "submitted on" : {
            "type" : "string",
            "format" : "date",
            "default" : "date.now",
            "example" : "2021-10-06"
          }
        }
      }
    }
  }
}